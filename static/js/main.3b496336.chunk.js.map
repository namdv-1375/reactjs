{"version":3,"sources":["shared/wrapper_detail.js","components/user_detail.js","shared/paginate.js","components/user_data.js","shared/wrapper_form.js","components/user_form.js","shared/current_time.js","shared/count_up_time.js","components/users.js","App.js","index.js"],"names":["WrapperDetail","this","props","children","Component","UserDetail","state","id","isHover","setState","isAdded","isEdited","isCanceled","onClick","editUserHandler","className","deleteUserHandler","user","index","key","onMouseEnter","onMouseEnterHandler","onMouseLeave","onMouseLeaveHandler","width","name","email","renderActionButton","Paginate","data","currentPage","dataPerPage","handleClick","bind","event","Number","target","nextProps","currentUser","indexOfLastData","indexOfFirstData","currentData","slice","length","map","pageNumbers","i","Math","ceil","push","totalPageNumbers","number","href","renderData","renderPageNumbers","UserData","colSpan","Button","variant","addUserHandler","users","renderButtonAddUser","WrapperForm","currentValues","errors","onChange","onSubmitForm","newCurrentValues","newUser","Object","assign","field","errorMessage","fieldsEmpty","keys","newErrors","e","newState","value","Date","now","validate","oldUser","validateFields","handleSubmit","disabled","values","filter","Boolean","UserForm","initState","focusUser","focusUserId","find","u","Form","Group","as","Row","Col","sm","Control","type","placeholder","CurrentTime","currentTime","toLocaleString","setInterval","CountUpTime","hours","minutes","seconds","countTime","convertTime","displayTime","Users","JSON","parse","localStorage","getItem","isSaved","setItem","stringify","filterUsers","action","newUsers","renderUserData","renderUserForm","text","effect","effectChange","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b496336.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport default class WrapperDetail extends Component {\n  render() {\n    return(\n      this.props.children\n    )\n  }\n}","import React, { Component } from 'react';\nimport WrapperDetail from '../shared/wrapper_detail';\n\nexport default class UserDetail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: null,\n      isHover: false\n    }\n  }\n\n  onMouseEnterHandler(id) {\n    this.setState({\n      id: id, isHover: true\n    });\n  }\n\n  onMouseLeaveHandler(id) {\n    this.setState({\n      id: id, isHover: false\n    });\n  }\n\n  renderActionButton(id) {\n    let { isAdded, isEdited, isCanceled } = this.props;\n    if (!isCanceled && (isAdded || isEdited)) {return null;}\n\n    if (this.state.isHover) {\n      return <div>\n        <span onClick={() => this.props.editUserHandler(id)}>\n          <i className='fa fa-edit mg-r-10 custom-icon-action'></i>\n        </span>\n        <span onClick={() => this.props.deleteUserHandler(id)}>\n          <i className='fa fa-trash custom-icon-action'></i>\n        </span>\n      </div>\n    }\n  }\n\n  render() {\n    let { user, index } = this.props;\n    return(\n      <tr key={`user-${index}`}\n        onMouseEnter={() => this.onMouseEnterHandler(user.id)}\n        onMouseLeave={() => this.onMouseLeaveHandler(user.id)}>\n        <WrapperDetail>\n          <td className='text-left' width='20%'>{user.name}</td>\n          <td className='text-left' width='20%'>{user.email}</td>\n          <td className='text-center' width='10%'>{this.renderActionButton(user.id)}</td>\n        </WrapperDetail>\n      </tr>\n    )\n  }\n}","import React, { Component } from 'react';\nimport UserDetail from '../components/user_detail';\n\nexport default class Paginate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data || [],\n      currentPage: 1,\n      dataPerPage: 3\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({data: nextProps.data});\n  }\n\n  renderData() {\n    let {\n      isAdded, isEdited, isCanceled,\n      currentUser, editUserHandler, deleteUserHandler\n    } = this.props;\n    let { data, currentPage, dataPerPage } = this.state;\n    let indexOfLastData = currentPage * dataPerPage;\n    let indexOfFirstData = indexOfLastData - dataPerPage;\n    let currentData = data.slice(indexOfFirstData, indexOfLastData);\n\n    if (data.length <= dataPerPage) {\n      currentData = data\n    }\n\n    let listUserDetail = currentData.map((user, index) => {\n      return <UserDetail\n        user={user} index={index} currentUser={currentUser} key={index}\n        isAdded={isAdded} isEdited={isEdited} isCanceled={isCanceled}\n        editUserHandler={editUserHandler.bind(this)}\n        deleteUserHandler={deleteUserHandler.bind(this)}\n      />\n    });\n\n    return listUserDetail;\n  }\n\n  renderPageNumbers() {\n    let { data, dataPerPage, currentPage } = this.state;\n    let pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(data.length / dataPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    let totalPageNumbers = pageNumbers.map(number => {\n      return (\n        <li className={`page-item ${number === currentPage ? 'active' : null}`} key={number}>\n          <a className='page-link' href='#' id={number} onClick={this.handleClick}>\n            {number}\n          </a>\n        </li>\n      );\n    });\n\n    if (pageNumbers.length <= 1) {return null;}\n\n    return (\n      <tr>\n        <ul className='pagination pd-top-15 pd-left-15'>\n          {totalPageNumbers}\n        </ul>\n      </tr>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        {this.renderData()}\n        {this.renderPageNumbers()}\n      </>\n    );\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport Paginate from '../shared/paginate';\n\nexport default class UserData extends Component {\n  renderButtonAddUser() {\n    if (this.props.isAdded) {return null;}\n\n    return (\n      <tr>\n        <td colSpan='3' className='text-center' width='100%'>\n          <Button variant='primary' onClick={() => this.props.addUserHandler()}>Add User</Button>\n        </td>\n      </tr>\n    )\n  }\n\n  render() {\n    let {\n      users, isAdded, isEdited, isCanceled,\n      editUserHandler, deleteUserHandler\n    } = this.props;\n\n    return (\n      <table className='table table-bordered'>\n        <thead>\n          <tr>\n            <td className='text-left'>{'Name'}</td>\n            <td className='text-left'>{'Email'}</td>\n            <td className='text-center'>{'Action'}</td>\n          </tr>\n        </thead>\n        <tbody>\n          <Paginate data={users}\n            currentUser={this.state}\n            isAdded={isAdded} isEdited={isEdited} isCanceled={isCanceled}\n            editUserHandler={editUserHandler.bind(this)}\n            deleteUserHandler={deleteUserHandler.bind(this)}\n          />\n          {this.renderButtonAddUser()}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nUserData.propTypes = {\n  users: PropTypes.array,\n  addUserHandler: PropTypes.func,\n  editUserHandler: PropTypes.func,\n  deleteUserHandler: PropTypes.func,\n  isAdded: PropTypes.bool\n};\n","import { Component } from 'react';\n\nexport default class WrapperForm extends Component {\n  constructor() {\n    super();\n    this.state = { currentValues: {}, errors: {} }\n    this.onChange = this.onChange.bind(this);\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      currentValues: this.newCurrentValues(this.props.newUser)\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      currentValues: this.newCurrentValues(nextProps.newUser)\n    })\n  }\n\n  newCurrentValues(user) {\n    return Object.assign(\n      this.state.currentValues, {id: user.id, name: user.name, email: user.email}\n    );\n  }\n\n  validate(field) {\n    const errorMessage = this.state.currentValues[field] ? null : field + ' is blank!'\n\n    this.setState({ errors: {\n      ...this.state.errors,\n      [field]: errorMessage\n    }})\n  }\n\n  fieldsEmpty() {\n    let newUser = this.state.currentValues;\n    let fieldsEmpty = [];\n    Object.keys(newUser).map(key => {\n      if(newUser[key] === '') {\n        fieldsEmpty.push(key)\n      }\n    });\n\n    return fieldsEmpty;\n  }\n\n  validateFields() {\n    let newErrors = this.state.errors;\n    this.fieldsEmpty().map(field => {\n      newErrors[field] = field + ' is blank!'\n    })\n\n    this.setState({errors: newErrors})\n  }\n\n  onChange(e) {\n    let newState = this.state;\n    let { name, value } = e.target;\n\n    if (newState.currentValues['id'] === null) {\n      newState.currentValues['id'] = Date.now()\n      newState.currentValues['created_at'] = Date.now()\n    }\n\n    this.setState({currentValues: {\n      ...newState.currentValues,\n      [name]: value\n    } },() => this.validate(name))\n  }\n\n  onSubmitForm(e) {\n    let { name } = e.target;\n    let user = name === 'cancel' ? this.props.oldUser : this.state.currentValues;\n    if (this.fieldsEmpty().length > 0 && name !== 'cancel') {\n      this.validateFields();\n    } else {\n      this.props.handleSubmit(user, name);\n    }\n  }\n\n  render() {\n    let disabled = Object.values(this.state.errors).filter(Boolean).length > 0 ? true : false\n\n    return this.props.children({\n      currentValues: this.state.currentValues,\n      errors: this.state.errors,\n      onChange: this.onChange,\n      disabled: disabled,\n      onSubmitForm: this.onSubmitForm\n    })\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport WrapperForm from '../shared/wrapper_form';\n\nexport default class UserForm extends Component {\n  initState(user) {\n    this.setState({\n      id: user.id || null,\n      name: user.name || '',\n      email: user.email || ''\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.isAdded) {\n      this.initState({});\n    }\n  }\n\n  componentWillMount() {\n    this.initState(this.focusUser());\n  }\n\n  focusUser() {\n    let { users, focusUserId } = this.props;\n    return users.find(u => (u.id === focusUserId)) || {};\n  }\n\n  render() {\n    return (\n      <div className='mg-l-15'>\n        <WrapperForm newUser={this.state} oldUser={this.focusUser()} handleSubmit={this.props.onSubmitForm.bind(this)}>\n          {({ currentValues, errors, onChange, disabled, onSubmitForm }) => (\n            <Form width=\"100%\">\n              <Form.Group as={Row}>\n                <Col sm='12'>\n                  <Form.Control type='text' placeholder='Enter name' value={currentValues.name}\n                    onChange={onChange} name='name'\n                  />\n                  <div className='error-messages'>{errors.name}</div>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Col sm='12'>\n                  <Form.Control type='email' placeholder='Enter email' value={currentValues.email}\n                    onChange={onChange} name='email'\n                  />\n                  <div className='error-messages'>{errors.email}</div>\n                </Col>\n              </Form.Group>\n              <Row>\n                <Col sm='4'></Col>\n                <Col sm='1' className='mg-r-15'>\n                  <Button variant='secondary' onClick={onSubmitForm} name={'cancel'}>Cancel</Button>\n                </Col>\n                <Col sm='1'>\n                  <Button variant='success' disabled={disabled} onClick={onSubmitForm} name={'update'}>Save</Button>\n                </Col>\n              </Row>\n            </Form>\n          )}\n        </WrapperForm>\n      </div>\n    );\n  }\n}\n\nUserForm.propTypes = {\n  user: PropTypes.object\n};\n","import React, { Component } from 'react';\n\nexport default class CurrentTime extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentTime: new Date().toLocaleString()\n    }\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        currentTime : new Date().toLocaleString()\n      })\n    }, 1000)\n  }\n\n  render() {\n    return (\n      <div>{this.state.currentTime}</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class CountUpTime extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    }\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.countTime()\n    }, 1000)\n  }\n\n  countTime() {\n    let { hours, minutes, seconds } = this.state;\n\n    if (seconds >= 59) {\n      minutes += 1\n      seconds = -1\n    }\n\n    if (minutes >= 60) {\n      hours += 1\n      minutes = 0\n    }\n\n    this.setState({\n      hours: hours,\n      minutes: minutes,\n      seconds : seconds + 1\n    })\n  }\n\n  convertTime(type) {\n    return type < 10 ? `0${type}` : type;\n  }\n\n  displayTime() {\n    let { hours, minutes, seconds } = this.state;\n    return <h3>\n      {`${this.convertTime(hours)} : ${this.convertTime(minutes)} : ${this.convertTime(seconds)}`}\n    </h3>\n  }\n\n  render() {\n    return (\n      <div>\n        {this.displayTime()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport UserData from './user_data';\nimport UserForm from './user_form';\nimport CurrentTime from '../shared/current_time';\nimport CountUpTime from '../shared/count_up_time';\nimport { Wave } from 'react-animated-text';\n\nexport default class Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: JSON.parse(localStorage.getItem('users')) || [],\n      focusUserId: null,\n      isAdded: false,\n      isEdited: false,\n      isSaved: false,\n      isCanceled: false\n    }\n  }\n\n  componentDidUpdate(){\n    localStorage.setItem('users', JSON.stringify(this.state.users));\n  }\n\n  addUserHandler() {\n    this.setState({\n      focusUserId: null,\n      isAdded: true,\n      isEdited: false,\n      isCanceled: false,\n      isSaved: false\n    })\n  }\n\n  editUserHandler(id) {\n    this.setState({\n      focusUserId: id,\n      isAdded: false,\n      isEdited: true,\n      isCanceled: false,\n      isSaved: false\n    })\n  }\n\n  deleteUserHandler(id) {\n    let filterUsers = this.state.users.filter(user => user.id !== id);\n    this.setState({users: filterUsers})\n  }\n\n  onSubmitForm(focusUser, action) {\n    let newState = this.state;\n    let newUsers = newState.users.map(u => u.id === focusUser.id ? focusUser : u);\n\n    if (action === 'cancel') {\n      newState = Object.assign(newState, {isCanceled: true, isAdded: false, isEdited: false, isSaved: false})\n    } else {\n      newState = Object.assign(newState, {isSaved: true, isCanceled: false, isEdited: false})\n    }\n\n    if (this.state.isCanceled) {\n      this.setState({users: this.state.users, isAdded: false})\n    } else if (this.state.isAdded) {\n      this.setState({\n        users: [...this.state.users, focusUser],\n        isAdded: false\n      })\n    } else {\n      this.setState({users: newUsers, isAdded: false})\n    }\n  }\n\n  renderUserForm() {\n    let { isAdded, isCanceled, isSaved, focusUserId, users } = this.state;\n    if (isCanceled || isSaved || (!isAdded && focusUserId === null)) {return null;}\n\n    return <UserForm\n      users={users}\n      focusUserId={focusUserId}\n      isAdded={isAdded}\n      isSaved={isSaved}\n      isCanceled={isCanceled}\n      onSubmitForm={this.onSubmitForm.bind(this)}\n    />\n  }\n\n  renderUserData() {\n    let { isAdded, isEdited, isCanceled, focusUserId, users } = this.state;\n\n    return <UserData\n      users={users}\n      focusUserId={focusUserId}\n      isAdded={isAdded}\n      isEdited={isEdited}\n      isCanceled={isCanceled}\n      addUserHandler={this.addUserHandler.bind(this)}\n      editUserHandler={this.editUserHandler.bind(this)}\n      deleteUserHandler={this.deleteUserHandler.bind(this)}\n    />\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <table className='table table-bordered'>\n            <thead>\n              <tr>\n                <td className='text-left'><h3>{'Exercise 2'}</h3></td>\n                <td className='text-right'>\n                  <CountUpTime />\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td width='50%'>\n                  {this.renderUserData()}\n                </td>\n                <td>\n                  {this.renderUserForm()}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className='text-center'>\n          <Wave text=\"Khó vãi (╥_╥)\" effect=\"stretch\" effectChange={2.2} />\n          <CurrentTime />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport User from './components/users'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <User />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}