{"version":3,"sources":["components/user_data.js","components/user_form.js","shared/current_time.js","components/users.js","App.js","index.js"],"names":["UserData","props","state","id","isHover","this","setState","user","users","find","u","editUser","deleteUser","currentUser","isAddUser","isCanceled","isUpdated","onClick","onClickEditUserHandler","className","onClickDeleteUserHandler","map","index","key","onMouseEnter","onMouseEnterHandler","onMouseLeave","onMouseLeaveHandler","width","name","email","renderButton","colSpan","Button","variant","addUserHandler","renderUserData","renderAddUser","Component","UserForm","initState","event","attribute","newState","Date","now","target","value","action","Object","assign","onSubmitForm","Form","Group","as","Row","Col","sm","Control","type","placeholder","onChange","e","onChangeAttribute","onSubmitFormHandler","CurrentTime","currentTime","toLocaleString","setInterval","Users","JSON","parse","localStorage","getItem","setItem","stringify","filterUsers","filter","newUsers","currentIndex","findIndex","eleUserForm","bind","renderTableListUser","text","effect","effectChange","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d21c2932.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nexport default class UserData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      isHover: false\n    }\n  }\n\n  onMouseEnterHandler(id) {\n    this.setState({\n      id: id, isHover: true\n    });\n  }\n\n  onMouseLeaveHandler(id) {\n    this.setState({\n      id: id, isHover: false\n    });\n  }\n\n  onClickEditUserHandler(id) {\n    let user = this.props.users.find(u => u.id === id);\n    this.props.editUser(user);\n  }\n\n  onClickDeleteUserHandler(id) {\n    let user = this.props.users.find(u => u.id === id);\n    this.props.deleteUser(user);\n  }\n\n  renderButton(id) {\n    let { currentUser, isAddUser } = this.props\n    if (isAddUser || currentUser.id !== null && !currentUser.isCanceled && !currentUser.isUpdated) {return null;}\n\n    if (this.state.id === id && this.state.isHover) {\n      return <div>\n        <span onClick={() => this.onClickEditUserHandler(id)}>\n          <i className='fa fa-edit mg-r-10 custom-icon-action'></i>\n        </span>\n        <span onClick={() => this.onClickDeleteUserHandler(id)}>\n          <i className='fa fa-trash custom-icon-action'></i>\n        </span>\n      </div>\n    }\n  }\n\n  renderUserData() {\n    const {users} = this.props;\n    const rows = users.map((user, index) => {\n      return (\n        <tr key={`user-${index}`}\n          onMouseEnter={() => this.onMouseEnterHandler(user.id)}\n          onMouseLeave={() => this.onMouseLeaveHandler(user.id)}>\n          <td className='text-left' width='20%'>{user.name}</td>\n          <td className='text-left' width='20%%'>{user.email}</td>\n          <td className='text-center' width='10%'>{this.renderButton(user.id)}</td>\n        </tr>\n      );\n    });\n\n    return rows;\n  }\n\n  renderAddUser() {\n    return (\n      <tr>\n        <td colSpan='3' className='text-center' width='100%'>\n          <Button variant='primary' onClick={() => this.props.addUserHandler()}>Add User</Button>\n        </td>\n      </tr>\n    )\n  }\n\n  render() {\n    return (\n      <table className='table table-bordered'>\n        <thead>\n          <tr>\n            <td className='text-left'>{'Name'}</td>\n            <td className='text-left'>{'Email'}</td>\n            <td className='text-center'>{'Action'}</td>\n          </tr>\n        </thead>\n        <tbody>\n          {this.renderUserData()}\n          {this.props.isAddUser ? null : this.renderAddUser()}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nUserData.propTypes = {\n  users: PropTypes.array,\n  editUser: PropTypes.func,\n  deleteUser: PropTypes.func,\n  isAddUser: PropTypes.bool\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\n\nexport default class UserForm extends Component {\n  initState(user) {\n    this.setState({\n      id: user.id,\n      name: user.name,\n      email: user.email,\n    });\n  }\n\n  componentWillMount() {\n    this.initState(this.props.currentUser);\n  }\n\n  onChangeAttribute(event, attribute) {\n    let { currentUser, isAddUser } = this.props;\n    let newState = isAddUser ? currentUser : this.state\n\n    if (newState['id'] === null) {\n      newState['id'] = Date.now()\n    }\n    newState[attribute] = event.target.value\n    this.setState(newState);\n  }\n\n  onSubmitFormHandler(user, action) {\n    if (action === 'cancel') {\n      this.setState(Object.assign(user, {isCanceled: true, isUpdated: false}))\n    } else {\n      this.setState(Object.assign(user, {isCanceled: false, isUpdated: true}))\n    }\n    this.props.onSubmitForm(user)\n  }\n\n  render() {\n    let { currentUser, isAddUser } = this.props;\n    if (currentUser.isCanceled || currentUser.isUpdated) {return null;}\n\n    return (\n      <div className='mg-l-15'>\n        <Form width=\"100%\">\n          <Form.Group as={Row}>\n            <Col sm='12'>\n              <Form.Control type='text' placeholder='Enter name' value={isAddUser ? currentUser.name : this.state.name}\n                onChange={e => this.onChangeAttribute(e, 'name')}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Col sm='12'>\n              <Form.Control type='email' placeholder='Enter email' value={isAddUser ? currentUser.email : this.state.email}\n                onChange={e => this.onChangeAttribute(e, 'email')}\n              />\n            </Col>\n          </Form.Group>\n          <Row>\n            <Col sm='4'></Col>\n            <Col sm='1' className='mg-r-15'>\n              <Button variant='secondary' onClick={() => this.onSubmitFormHandler(currentUser, 'cancel')}>Cancel</Button>\n            </Col>\n            <Col sm='1'>\n              <Button variant='success' onClick={() => this.onSubmitFormHandler(this.state, 'update')}>Save</Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nUserForm.propTypes = {\n  user: PropTypes.object\n};\n","import React, { Component } from 'react';\n\nexport default class CurrentTime extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentTime: new Date().toLocaleString()\n    }\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        currentTime : new Date().toLocaleString()\n      })\n    }, 1000)\n  }\n\n  render() {\n    return (\n      <div>{this.state.currentTime}</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport UserData from './user_data';\nimport UserForm from './user_form'\nimport CurrentTime from '../shared/current_time'\nimport { Wave } from 'react-animated-text';\n\nexport default class Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: JSON.parse(localStorage.getItem('users')) || [],\n      currentUser: {\n        id: null, name: '', email: ''\n      },\n      isAddUser: false\n    }\n  }\n\n  componentDidUpdate(){\n    localStorage.setItem('users', JSON.stringify(this.state.users));\n  }\n\n  editUser(user) {\n    this.setState({\n      currentUser: Object.assign(user, {isCanceled: false, isUpdated: false}),\n      isAddUser: false\n    })\n  }\n\n  deleteUser(currentUser) {\n    let filterUsers = this.state.users.filter(user => user !== currentUser);\n    this.setState({users: filterUsers})\n  }\n\n  onSubmitForm(currentUser) {\n    let newUsers= this.state.users;\n    let currentIndex = newUsers.findIndex(user => user.id === currentUser.id);\n\n    if (currentIndex >= 0) {\n      newUsers[currentIndex] = currentUser\n      this.setState({\n        users: newUsers,\n        currentUser: currentUser,\n        isAddUser: false\n      })\n    } else if (currentUser.isCanceled || currentUser.id === null) {\n      this.setState({\n        isAddUser: false\n      })\n    } else {\n      this.setState({\n        users: [...this.state.users, currentUser],\n        currentUser: currentUser,\n        isAddUser: false\n      })\n    }\n  }\n\n  addUserHandler() {\n    this.setState({\n      isAddUser: true,\n      currentUser: {\n        id: null, name: '', email: ''\n      }\n    })\n  }\n\n  renderTableListUser() {\n    let { currentUser, isAddUser } = this.state;\n    let eleUserForm;\n    if (isAddUser || (currentUser.id !== null && !currentUser.isCanceled && !currentUser.isUpdated)) {\n      eleUserForm = <UserForm onSubmitForm={this.onSubmitForm.bind(this)}\n        currentUser={this.state.currentUser}\n        isAddUser={this.state.isAddUser}\n      />\n    }\n    return (\n      <div>\n        <table className='table table-bordered'>\n        <thead>\n          <tr>\n            <td className='text-left'><h3>{'Exercise 2'}</h3></td>\n            <td className='text-right'>\n              <CurrentTime />\n            </td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td width=\"50%\">\n              <UserData\n                users={this.state.users}\n                editUser={this.editUser.bind(this)}\n                deleteUser={this.deleteUser.bind(this)}\n                currentUser={this.state.currentUser}\n                addUserHandler={this.addUserHandler.bind(this)}\n                isAddUser={this.state.isAddUser}\n              />\n            </td>\n            <td>\n              {eleUserForm}\n            </td>\n          </tr>\n        </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderTableListUser()}\n        <div className='text-center'>\n          <Wave text=\"Khó vãi (╥_╥)\" effect=\"stretch\" effectChange={2.2} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport User from './components/users'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <User />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}